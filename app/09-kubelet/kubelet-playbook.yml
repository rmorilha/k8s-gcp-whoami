- hosts: workers
  remote_user: root
  vars:
    cni_plugins_version: "{{ lookup('env','CNI_PLUGINS_VERSION') }}"
    containerd_version: "{{ lookup('env','CONTAINERD_VERSION') }}"
    kube_version: "{{ lookup('env','KUBE_VERSION') }}"
  tasks:
  - name: Creates directory /etc/cni/net.d
    file: path=/etc/cni/net.d state=directory
  - name: Creates directory /opt/cni/bin
    file: path=/opt/cni/bin state=directory
  - name: Creates directory /var/lib/kubelet
    file: path=/var/lib/kubelet state=directory
  - name: Creates directory /var/lib/kube-proxy
    file: path=/var/lib/kube-proxy state=directory
  - name: Creates directory /var/lib/kubernetes
    file: path=/var/lib/kubernetes state=directory
  - name: Creates directory /var/run/kubernetes
    file: path=/var/run/kubernetes state=directory
  - name: Unarchive cri Tools
    unarchive:
      src: https://github.com/kubernetes-incubator/cri-tools/releases/download/v1.12.0/crictl-v1.12.0-linux-amd64.tar.gz
      dest: /usr/local/bin/
      remote_src: yes 
  - name: Unarchive runsc
    get_url:
      url: https://storage.googleapis.com/kubernetes-the-hard-way/runsc
      dest: /usr/local/bin/runsc
      mode: 0700
  - name: 
    get_url:
      url: https://github.com/opencontainers/runc/releases/download/v1.0.0-rc5/runc.amd64
      dest: /usr/local/bin/runc
      mode: 0700
  - name: Unarchive cni-plugins
    unarchive:
      src: https://github.com/containernetworking/plugins/releases/download/{{ cni_plugins_version }}/cni-plugins-amd64-{{ cni_plugins_version }}.tgz
      dest: /opt/cni/bin/
      remote_src: yes
  - name: get containerd
    unarchive:
      src: https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}.linux-amd64.tar.gz
      dest: /
      remote_src: yes
  - name: get kubectl
    get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/{{ kube_version }}/bin/linux/amd64/kubectl
      dest: /usr/local/bin/kubectl
      mode: 0700
  - name: get kube-proxy
    get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/{{ kube_version }}/bin/linux/amd64/kube-proxy
      dest: /usr/local/bin/kube-proxy
      mode: 0700
  - name: get kubelet
    get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/{{ kube_version }}/bin/linux/amd64/kubelet
      dest: /usr/local/bin/kubelet
      mode: 0700
  - name: copy ca cert
    copy:
      src: /opt/app/04-certs/ca.pem
      dest: /var/lib/kubernetes/ca.pem
  - name: copy instance key
    copy:
      src: /opt/app/04-certs/{{ ansible_nodename }}-key.pem
      dest: /var/lib/kubelet/{{ ansible_nodename }}-key.pem
  - name: copy instance cert
    copy:
      src: /opt/app/04-certs/{{ ansible_nodename }}.pem
      dest: /var/lib/kubelet/{{ ansible_nodename }}.pem
  - name: copy kube-proxy kubeconfig
    copy:
      src: /opt/app/05-kubeconfig/kube-proxy.kubeconfig
      dest: /var/lib/kube-proxy/kubeconfig
  - name: copy instance kubeconfig
    copy:
      src: /opt/app/05-kubeconfig/{{ ansible_nodename }}.kubeconfig
      dest: /var/lib/kubelet/kubeconfig
  - name: copy gen-kubelet-conf script
    copy:
      src: /opt/app/09-kubelet/gen-kubelet-conf.sh
      dest: /opt/gen-kubelet-conf.sh
      owner: root
      group: root
      mode: 0744
  - name: Generate kubelet... conf
    command: /opt/gen-kubelet-conf.sh
  - name: Install socat on nodes
    apt:
      name: socat
      update_cache: yes
  - name: Reload systemd
    command: systemctl daemon-reload
  - name: Enable containerd kubelet kube-proxy
    command: systemctl enable containerd kubelet kube-proxy
  - name: Start containerd kubelet kube-proxy
    command: systemctl start containerd kubelet kube-proxy
